{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-ea5bccc9f42bcd0bb29bb8d26a73792c111bdcf4ce9a11d7d1f74becf72fc24175d1958bf53f41b8f527bba47be7c79f153321673c92c68680cfd35569872ce6",
            "file": "src/app/types/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface User {\n  name: string;\n  lastName: string;\n  age: number;\n}\n\nexport default User;\n",
            "properties": [
                {
                    "name": "age",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "lastName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "AppStore",
            "id": "injectable-AppStore-0bf814ae7fbb2bf30301fe77068a1e021f26fb8397c44ee075c7c8180d31eeb0ad643b9c1e2542d288a52a3247970bb4584ee375074d08719402789455ce6f88",
            "file": "src/app/stores/app-store.service.ts",
            "properties": [
                {
                    "name": "clientName",
                    "defaultValue": "signal('Pedro')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "emailRegex",
                    "defaultValue": "/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "passRegex",
                    "defaultValue": "/^[A-Za-z0-9]{6}$/",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppStore {\n  public clientName = signal('Pedro');\n  readonly passRegex = /^[A-Za-z0-9]{6}$/;\n  readonly emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "Utils",
            "id": "injectable-Utils-d8f919fc384339062dabae9e83f512d9d8f027b92b5361ee1316591fb87bca73500df06503b66cda1ebedb4bef97ac6f1600f2cd87c47a5254b583ffe7c85303",
            "file": "src/app/stores/utils.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "showGenericModal",
                    "args": [
                        {
                            "name": "comp",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "props",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'dialog-modal'"
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOpens an Ionic component modal with the content and attributes passed in the function params\n\n\n```html\n```typescript\nconst comp = ExampleAngularComponent;\nconst props = {text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'};\nconst id = 'modal-unique-id';\nconst modal = await showGenericModal(comp, id, props, canDismiss);\nconsole.log(modal); // 'accept' || undefined\n```\n```",
                    "description": "<p>Opens an Ionic component modal with the content and attributes passed in the function params</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```typescript\nconst comp = ExampleAngularComponent;\nconst props = {text: &#39;Lorem ipsum dolor sit amet, consectetur adipiscing elit.&#39;};\nconst id = &#39;modal-unique-id&#39;;\nconst modal = await showGenericModal(comp, id, props, canDismiss);\nconsole.log(modal); // &#39;accept&#39; || undefined</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 341,
                                "end": 345,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "comp"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 335,
                                "end": 340,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The Angular component that shoud be shown in the modal</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 415,
                                "end": 420,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "props"
                            },
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 409,
                                "end": 414,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>An object with the Inputs used in the component</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 483,
                                "end": 485,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "id"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'dialog-modal'",
                            "tagName": {
                                "pos": 477,
                                "end": 482,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The ID attribute assigned to the modal | default &#39;dialog-modal&#39;</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 558,
                                "end": 565,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Will return undefined or a string with the action taken by user click</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 647,
                                "end": 654,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "example"
                            },
                            "comment": "<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">const comp = ExampleAngularComponent;\nconst props = {text: &#39;Lorem ipsum dolor sit amet, consectetur adipiscing elit.&#39;};\nconst id = &#39;modal-unique-id&#39;;\nconst modal = await showGenericModal(comp, id, props, canDismiss);\nconsole.log(modal); // &#39;accept&#39; || undefined</code></pre></div>"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ModalController } from '@ionic/angular/standalone';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class Utils {\n  constructor(private modalCtrl: ModalController) {}\n\n  /**\n   * Opens an Ionic component modal with the content and attributes passed in the function params\n   *\n   * @param comp - The Angular component that shoud be shown in the modal\n   * @param props - An object with the Inputs used in the component\n   * @param id - The ID attribute assigned to the modal | default 'dialog-modal'\n   * @returns Will return undefined or a string with the action taken by user click\n   *\n   * @example\n   * ```typescript\n   * const comp = ExampleAngularComponent;\n   * const props = {text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'};\n   * const id = 'modal-unique-id';\n   * const modal = await showGenericModal(comp, id, props, canDismiss);\n   * console.log(modal); // 'accept' || undefined\n   * ```\n   */\n  async showGenericModal(\n    comp: any,\n    props: object,\n    id: string = 'dialog-modal'\n  ) {\n    const modal = await this.modalCtrl.create({\n      component: comp,\n      id: id,\n      componentProps: props,\n    });\n    modal.present();\n    const { data } = await modal.onWillDismiss();\n    if (data) return data.action;\n    return undefined;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalCtrl",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "modalCtrl",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-038a42db3d5a7e21be5bc427ab4d570e71dee653bc23249eaa6e95599b7f0ce409cf496aa71574269d51b778471464255880615df2cb6dcc6d320dce12843012",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "IonApp"
                },
                {
                    "name": "IonRouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { IonApp, IonRouterOutlet } from '@ionic/angular/standalone';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  imports: [IonApp, IonRouterOutlet],\n})\nexport class AppComponent {\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "extends": [],
            "templateData": "<ion-app>\n  <ion-router-outlet [animated]=\"false\"></ion-router-outlet>\n</ion-app>\n"
        },
        {
            "name": "AppLayoutComponent",
            "id": "component-AppLayoutComponent-fa2f0e48e43d7125c0e8f19d8cc2326a8aa36f4b9f67d13c3b4ac709a0b78607d86e82f094f65f0ce99f4079cb1e25da057243affa7816bde1592f85bcd5d245",
            "file": "src/app/layouts/app-layout/app-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-app-layout",
            "styleUrls": [
                "./app-layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app-layout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "returnURL",
                    "defaultValue": "computed(() => {\n    return window.location.href;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "IonRouterOutlet"
                },
                {
                    "name": "IonTabs"
                },
                {
                    "name": "IonTabBar"
                },
                {
                    "name": "IonTabButton"
                },
                {
                    "name": "IonIcon"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, computed } from '@angular/core';\nimport {\n  IonRouterOutlet,\n  IonTabs,\n  IonTabBar,\n  IonTabButton,\n  IonIcon,\n} from '@ionic/angular/standalone';\n\nimport { addIcons } from 'ionicons';\nimport {\n  homeOutline,\n  cogOutline,\n  newspaperOutline,\n  cubeOutline,\n} from 'ionicons/icons';\n\n@Component({\n  selector: 'app-app-layout',\n  templateUrl: './app-layout.component.html',\n  styleUrls: ['./app-layout.component.scss'],\n  imports: [IonRouterOutlet, IonTabs, IonTabBar, IonTabButton, IonIcon],\n})\nexport class AppLayoutComponent {\n  constructor() {\n    addIcons({ homeOutline, cogOutline, newspaperOutline, cubeOutline });\n  }\n\n  // ##### COMPUTED\n  returnURL = computed(() => {\n    return window.location.href;\n  });\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app-layout.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 24
            },
            "extends": [],
            "templateData": "<ion-router-outlet [animated]=\"false\"></ion-router-outlet>\n@if (!returnURL().includes('global-bank-components')) {\n  <ion-tabs>\n    <ion-tab-bar slot=\"bottom\">\n      <ion-tab-button tab=\"home\">\n        <ion-icon name=\"home-outline\"></ion-icon>\n        Home\n      </ion-tab-button>\n      <ion-tab-button tab=\"details\">\n        <ion-icon name=\"cog-outline\"></ion-icon>\n        Details\n      </ion-tab-button>\n      <ion-tab-button tab=\"form\">\n        <ion-icon name=\"newspaper-outline\"></ion-icon>\n        Form\n      </ion-tab-button>\n      <ion-tab-button tab=\"global-bank-components\">\n        <ion-icon name=\"cube-outline\"></ion-icon>\n        Components\n      </ion-tab-button>\n    </ion-tab-bar>\n  </ion-tabs>\n}\n"
        },
        {
            "name": "BaseLayoutComponent",
            "id": "component-BaseLayoutComponent-2327fec7c2a74185e29e5fdbddd8eddeb3798ebb43842c316accab4d8db4ae93b36d7b6b9c884bbced21eb754e53a87f6e1e825b35b3f7f033afa5ad042e15cc",
            "file": "src/app/layouts/base-layout/base-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-base-layout",
            "styleUrls": [
                "./base-layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./base-layout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "IonRouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\nimport { IonRouterOutlet } from '@ionic/angular/standalone';\n\n@Component({\n  selector: 'app-base-layout',\n  templateUrl: './base-layout.component.html',\n  styleUrls: ['./base-layout.component.scss'],\n  imports: [IonRouterOutlet],\n})\nexport class BaseLayoutComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./base-layout.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-router-outlet [animated]=\"false\"></ion-router-outlet>\n"
        },
        {
            "name": "ButtonPage",
            "id": "component-ButtonPage-9af55f40e23d4dd1169dfddf3a485246567d8b3c699bf16d7bae7c1cb1d8e22596dd6250372ca65b22f7964103f3463f95ef75fe89a76f71f88a76abb416ace4",
            "file": "src/app/views/global-bank-components/button/button.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "colors",
                    "defaultValue": "'<gb-btn label=\"Button\" color=\"blue\" />\\n<gb-btn label=\"Button\" fill=\"solid\" color=\"pink\" />\\n<gb-btn label=\"Button\" color=\"blue\" fill=\"outline\" />\\n<gb-btn label=\"Button\" fill=\"outline\" color=\"pink\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "disabled",
                    "defaultValue": "'<gb-btn label=\"Button\" [disabled]=\"true\" />\\n<gb-btn label=\"Button\" [disabled]=\"true\" fill=\"outline\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "extraClasses",
                    "defaultValue": "'<gb-btn label=\"Button\" extraClasses=\"rounded-md gb-pa-4xl\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "icon",
                    "defaultValue": "'<gb-btn label=\"Button\" icon=\"home-outline\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "iconPosition",
                    "defaultValue": "'<gb-btn label=\"Button\" icon=\"home-outline\" iconPosition=\"right\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "level",
                    "defaultValue": "'<gb-btn label=\"Button\" [level]=\"300\" />\\n<gb-btn label=\"Button\" [level]=\"400\" />\\n<gb-btn label=\"Button\" [level]=\"500\" />\\n<gb-btn label=\"Button\" [level]=\"600\" />\\n<gb-btn label=\"Button\" [level]=\"700\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "outline",
                    "defaultValue": "'<gb-btn label=\"Button\" fill=\"outline\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "primary",
                    "defaultValue": "'<gb-btn label=\"Button\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "spinner",
                    "defaultValue": "'<gb-btn spinner=\"bubbles\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "spinnerPosition",
                    "defaultValue": "'<gb-btn label=\"Button\" spinner=\"bubbles\" spinnerPosition=\"right\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonContent"
                },
                {
                    "name": "GbBtnComponent",
                    "type": "component"
                },
                {
                    "name": "Highlight"
                },
                {
                    "name": "IonRow"
                },
                {
                    "name": "IonCol"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { IonContent, IonRow, IonCol } from '@ionic/angular/standalone';\n\n// ##### GB COMPONENTS\nimport { GbBtnComponent } from 'src/app/components/global/gb-btn/gb-btn.component';\n\n// ##### OTHER IMPORTS\nimport { Highlight } from 'ngx-highlightjs';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.page.html',\n  styleUrls: ['./button.page.scss'],\n  standalone: true,\n  imports: [IonContent, GbBtnComponent, Highlight, IonRow, IonCol],\n})\nexport class ButtonPage {\n  primary = '<gb-btn label=\"Button\" />';\n  outline = '<gb-btn label=\"Button\" fill=\"outline\" />';\n  colors =\n    '<gb-btn label=\"Button\" color=\"blue\" />\\n<gb-btn label=\"Button\" fill=\"solid\" color=\"pink\" />\\n<gb-btn label=\"Button\" color=\"blue\" fill=\"outline\" />\\n<gb-btn label=\"Button\" fill=\"outline\" color=\"pink\" />';\n  level =\n    '<gb-btn label=\"Button\" [level]=\"300\" />\\n<gb-btn label=\"Button\" [level]=\"400\" />\\n<gb-btn label=\"Button\" [level]=\"500\" />\\n<gb-btn label=\"Button\" [level]=\"600\" />\\n<gb-btn label=\"Button\" [level]=\"700\" />';\n  disabled =\n    '<gb-btn label=\"Button\" [disabled]=\"true\" />\\n<gb-btn label=\"Button\" [disabled]=\"true\" fill=\"outline\" />';\n  icon = '<gb-btn label=\"Button\" icon=\"home-outline\" />';\n  iconPosition =\n    '<gb-btn label=\"Button\" icon=\"home-outline\" iconPosition=\"right\" />';\n  spinner = '<gb-btn spinner=\"bubbles\" />';\n  spinnerPosition =\n    '<gb-btn label=\"Button\" spinner=\"bubbles\" spinnerPosition=\"right\" />';\n  extraClasses =\n    '<gb-btn label=\"Button\" extraClasses=\"rounded-md gb-pa-4xl\" />';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button.page.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<ion-content [fullscreen]=\"true\">\n  <div class=\"gb-pa-4xl\">\n    <div class=\"display-lg w700 gb-mb-4xl\">GB Button</div>\n    <!-- Primary -->\n    <div class=\"display-sm w600\">Button primary</div>\n    <div class=\"text-md\">\n      Boton primario, por defecto adquiere el color principal del banco.\n    </div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col><gb-btn label=\"Button\" /></ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"primary\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Secondary -->\n    <div class=\"display-sm w600\">Button secondary</div>\n    <div class=\"text-md\">Boton secundario, con bordes y texto.</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-btn label=\"Button\" fill=\"outline\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"outline\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Color -->\n    <div class=\"display-sm w600\">Button color</div>\n    <div class=\"text-md\">\n      Controla el color del boton segun la colección de colores del banco.\n    </div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-btn label=\"Button\" color=\"blue\" />\n              <gb-btn label=\"Button\" fill=\"solid\" color=\"pink\" />\n              <gb-btn label=\"Button\" color=\"blue\" fill=\"outline\" />\n              <gb-btn label=\"Button\" fill=\"outline\" color=\"pink\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"colors\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Level -->\n    <div class=\"display-sm w600\">Button color level</div>\n    <div class=\"text-md\">\n      Controla el nivel de intensidad del color asignado. <br />[25, 50, 100,\n      200, 300, 400, 500, 600, 700, 800, 900, 950]\n    </div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-btn label=\"Button\" [level]=\"300\" />\n              <gb-btn label=\"Button\" [level]=\"400\" />\n              <gb-btn label=\"Button\" [level]=\"500\" />\n              <gb-btn label=\"Button\" [level]=\"600\" />\n              <gb-btn label=\"Button\" [level]=\"700\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"level\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Disabled -->\n    <div class=\"display-sm w600\">Button disabled</div>\n    <div class=\"text-md\">Deshabilita el boton</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-btn label=\"Button\" [disabled]=\"true\" />\n              <gb-btn label=\"Button\" [disabled]=\"true\" fill=\"outline\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"disabled\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Icons -->\n    <div class=\"display-sm w600\">Button icons</div>\n    <div class=\"text-md\">Agrega un icono al boton (Ionicons)</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-btn label=\"Button\" icon=\"home-outline\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"icon\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Icons -->\n    <div class=\"display-sm w600\">Button icons position</div>\n    <div class=\"text-md\">\n      Indica la posición del icono en el boton (derecha o izquierda del label).\n    </div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-btn label=\"Button\" icon=\"home-outline\" iconPosition=\"right\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"iconPosition\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Spinner -->\n    <div class=\"display-sm w600\">Button spinner</div>\n    <div class=\"text-md\">Agrega un spinner al boton.</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-btn spinner=\"bubbles\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"spinner\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Spinner position -->\n    <div class=\"display-sm w600\">Button spinner position</div>\n    <div class=\"text-md\">\n      Indica la posición del spinner en el botón (derecha o izquierda del\n      label).\n    </div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-btn\n                label=\"Button\"\n                spinner=\"bubbles\"\n                spinnerPosition=\"right\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"spinnerPosition\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Spinner -->\n    <div class=\"display-sm w600\">Button extra classes</div>\n    <div class=\"text-md\">\n      Permite agregar clases de CSS adicionales al componente.\n    </div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-btn label=\"Button\" extraClasses=\"rounded-md gb-pa-4xl\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"extraClasses\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n  </div>\n</ion-content>\n"
        },
        {
            "name": "CheckboxPage",
            "id": "component-CheckboxPage-086d01ab65438b13a10a307575b8499da574308dd0ddb7d58da2251495bb34ab8f9addc8ef2a9577f4d20722501fc96bc376a6c46e46e7ab398d57ac6315f844",
            "file": "src/app/views/global-bank-components/checkbox/checkbox.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox",
            "styleUrls": [
                "./checkbox.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "colors",
                    "defaultValue": "'<gb-checkbox [(value)]=\"isChecked\" name=\"checkbox_2\" label=\"Checkbox label\" />\\n<gb-checkbox [(value)]=\"isChecked\" name=\"checkbox_3\" label=\"Checkbox label\" color=\"pink\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "disabled",
                    "defaultValue": "'<gb-checkbox [(value)]=\"isChecked\" name=\"checkbox_4\" label=\"Checkbox label\" [disabled]=\"true\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "isChecked",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "primary",
                    "defaultValue": "'<gb-checkbox [(value)]=\"isChecked\" name=\"checkbox_1\" label=\"Checkbox label\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonContent"
                },
                {
                    "name": "GbCheckboxComponent",
                    "type": "component"
                },
                {
                    "name": "Highlight"
                },
                {
                    "name": "IonRow"
                },
                {
                    "name": "IonCol"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, signal } from '@angular/core';\nimport { IonContent, IonRow, IonCol } from '@ionic/angular/standalone';\n\n// ##### GB COMPONENTS\nimport { GbCheckboxComponent } from 'src/app/components/global/gb-checkbox/gb-checkbox.component';\n\n// ##### OTHER IMPORTS\nimport { Highlight } from 'ngx-highlightjs';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.page.html',\n  styleUrls: ['./checkbox.page.scss'],\n  standalone: true,\n  imports: [IonContent, GbCheckboxComponent, Highlight, IonRow, IonCol],\n})\nexport class CheckboxPage {\n  // ##### SIGNALS\n  isChecked = signal(false);\n\n  primary =\n    '<gb-checkbox [(value)]=\"isChecked\" name=\"checkbox_1\" label=\"Checkbox label\" />';\n  colors =\n    '<gb-checkbox [(value)]=\"isChecked\" name=\"checkbox_2\" label=\"Checkbox label\" />\\n<gb-checkbox [(value)]=\"isChecked\" name=\"checkbox_3\" label=\"Checkbox label\" color=\"pink\" />';\n  disabled =\n    '<gb-checkbox [(value)]=\"isChecked\" name=\"checkbox_4\" label=\"Checkbox label\" [disabled]=\"true\" />';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./checkbox.page.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<ion-content [fullscreen]=\"true\">\n  <div class=\"gb-pa-4xl\">\n    <div class=\"display-lg w700 gb-mb-4xl\">GB Checkbox</div>\n    <!-- Primary -->\n    <div class=\"display-sm w600\">Checkbox</div>\n    <div class=\"text-md\">\n      Checkbox principal, por defecto obtiene el color primario del banco.\n    </div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-checkbox\n                [(value)]=\"isChecked\"\n                name=\"checkbox_1\"\n                label=\"Checkbox label\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"primary\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Colors -->\n    <div class=\"display-sm w600\">Checkbox colors</div>\n    <div class=\"text-md\">Indica el color del checkbox.</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-checkbox\n                [(value)]=\"isChecked\"\n                name=\"checkbox_2\"\n                label=\"Checkbox label\" />\n              <br />\n              <gb-checkbox\n                [(value)]=\"isChecked\"\n                name=\"checkbox_3\"\n                label=\"Checkbox label\"\n                color=\"pink\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"colors\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Colors -->\n    <div class=\"display-sm w600\">Checkbox disabled</div>\n    <div class=\"text-md\">Deshabilita el checkbox.</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-checkbox\n                [(value)]=\"isChecked\"\n                name=\"checkbox_4\"\n                label=\"Checkbox label\"\n                [disabled]=\"true\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"disabled\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n  </div>\n</ion-content>\n"
        },
        {
            "name": "ColorsPage",
            "id": "component-ColorsPage-1df0c203de9c38288298db3d2f182500673c67e9ece601e5bed0b483be922479cdecd0759240757586c7137ad900b7ad8634e63d86d715489e161f7d83aaef98",
            "file": "src/app/views/global-bank-components/colors/colors.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-colors",
            "styleUrls": [
                "./colors.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./colors.page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "colors",
                    "defaultValue": "[\n    'gray-light',\n    'gray-dark',\n    'blue',\n    'cyan',\n    'pink',\n    'green',\n    'yellow',\n    'error',\n    'warning',\n    'success',\n    'tap-blue',\n    'tap-yellow',\n    'tap-pink',\n    'tap-cyan',\n    'tap-aquamarine',\n    'tap-error',\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "levels",
                    "defaultValue": "[25, 50, 100, 200, 300, 400, 500, 600, 700, 800, 900, 950]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "methodsClass": [
                {
                    "name": "returnCode",
                    "args": [
                        {
                            "name": "preClass",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "color",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "preClass",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "color",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonCol"
                },
                {
                    "name": "IonContent"
                },
                {
                    "name": "IonRow"
                },
                {
                    "name": "Highlight"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { IonContent, IonRow, IonCol } from '@ionic/angular/standalone';\n\n// ##### OTHER IMPORTS\nimport { Highlight } from 'ngx-highlightjs';\n\n@Component({\n  selector: 'app-colors',\n  templateUrl: './colors.page.html',\n  styleUrls: ['./colors.page.scss'],\n  standalone: true,\n  imports: [IonCol, IonContent, IonRow, Highlight],\n})\nexport class ColorsPage {\n  colors = [\n    'gray-light',\n    'gray-dark',\n    'blue',\n    'cyan',\n    'pink',\n    'green',\n    'yellow',\n    'error',\n    'warning',\n    'success',\n    'tap-blue',\n    'tap-yellow',\n    'tap-pink',\n    'tap-cyan',\n    'tap-aquamarine',\n    'tap-error',\n  ];\n  levels = [25, 50, 100, 200, 300, 400, 500, 600, 700, 800, 900, 950];\n\n  // ##### METHODS\n  returnCode(preClass: string, color: string) {\n    return `<div class=\"${preClass}-gb-${color}-400\">Content</div>`;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./colors.page.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<ion-content [fullscreen]=\"true\">\n  <div class=\"gb-pa-4xl\">\n    <div class=\"gb-pa-4xl\">\n      <div class=\"display-lg w700 gb-mb-4xl\">GB Colors</div>\n    </div>\n    <!-- Background -->\n    <div class=\"display-sm w600\">Background colors</div>\n    <div class=\"text-md\">Clases para colores de fondo</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          @for (color of colors; track color) {\n          <ion-row>\n            <ion-col size-lg=\"1\">{{color}}</ion-col>\n            @for (level of levels; track level) {\n            <div [class]=\"'gb-pa-sm gb-ma-sm bg-gb-' + color + '-' + level\">\n              {{level}}\n            </div>\n            }\n            <ion-col>\n              <pre><code [highlight]=\"returnCode('bg', color)\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n          }\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Border -->\n    <div class=\"display-sm w600\">Border colors</div>\n    <div class=\"text-md\">Clases para colores de borde</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          @for (color of colors; track color) {\n          <ion-row>\n            <ion-col size-lg=\"1\">{{color}}</ion-col>\n            @for (level of levels; track level) {\n            <div [class]=\"'gb-pa-sm gb-ma-sm border-gb-' + color + '-' + level\">\n              {{level}}\n            </div>\n            }\n            <ion-col>\n              <pre><code [highlight]=\"returnCode('border', color)\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n          }\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Hover -->\n    <div class=\"display-sm w600\">Hover colors</div>\n    <div class=\"text-md\">Clases para colores de hover</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          @for (color of colors; track color) {\n          <ion-row>\n            <ion-col size-lg=\"1\">{{color}}</ion-col>\n            @for (level of levels; track level) {\n            <div\n              [class]=\"'transition gb-pa-sm gb-ma-sm hover:bg-gb-' + color + '-' + level\">\n              {{level}}\n            </div>\n            }\n            <ion-col>\n              <pre><code [highlight]=\"returnCode('hover:bg', color)\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n          }\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Active -->\n    <div class=\"display-sm w600\">Active colors</div>\n    <div class=\"text-md\">Clases para colores de active (en click)</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          @for (color of colors; track color) {\n          <ion-row class=\"ion-content-align-center\">\n            <ion-col size-lg=\"1\">{{color}}</ion-col>\n            @for (level of levels; track level) {\n            <div\n              [class]=\"'transition gb-pa-sm gb-ma-xs active:bg-gb-' + color + '-' + level\">\n              {{level}}\n            </div>\n            }\n            <ion-col>\n              <pre><code [highlight]=\"returnCode('active:bg',color)\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n          }\n        </div>\n      </div>\n    </div>\n    <!--/-->\n  </div>\n</ion-content>\n"
        },
        {
            "name": "DetailsPage",
            "id": "component-DetailsPage-8a387f237fc9f0dc285c0163142ea8f37ee7859f15da6a0a785bc1892e24d46065d91b755f9ab1f0a1106b3ff6566afb181455de50a56a58e714ae57ed1b8a9d",
            "file": "src/app/views/details/details.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-details",
            "styleUrls": [
                "./details.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./details.page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appStore",
                    "defaultValue": "inject(AppStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "itemsList",
                    "defaultValue": "signal(['Apples', 'Bananas', 'Pears'])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "newUser",
                    "defaultValue": "signal<User>({ name: 'John', lastName: 'Doe', age: 20 })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "utils",
                    "defaultValue": "inject(Utils)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openModal",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOpens modal component 1\n",
                    "description": "<p>Opens modal component 1</p>\n",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "openModal2",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOpens modal component 2\n",
                    "description": "<p>Opens modal component 2</p>\n",
                    "modifierKind": [
                        134
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonContent"
                },
                {
                    "name": "IonHeader"
                },
                {
                    "name": "IonTitle"
                },
                {
                    "name": "IonToolbar"
                },
                {
                    "name": "IonButton"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, signal, inject } from '@angular/core';\nimport {\n  IonContent,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  IonButton,\n} from '@ionic/angular/standalone';\n\n// ##### SERVICES\nimport { AppStore } from 'src/app/stores/app-store.service';\nimport { Utils } from 'src/app/stores/utils.service';\n\n// ##### COMPONENTS\nimport { ModalSampleComponent } from 'src/app/components/modal-sample/modal-sample.component';\nimport { ModalSample2Component } from 'src/app/components/modal-sample-2/modal-sample-2.component';\n\n// ##### TYPES\nimport User from 'src/app/types/User';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.page.html',\n  styleUrls: ['./details.page.scss'],\n  standalone: true,\n  imports: [IonContent, IonHeader, IonTitle, IonToolbar, IonButton],\n})\nexport class DetailsPage implements OnInit {\n  // ##### INJECTIONS\n  appStore = inject(AppStore);\n  utils = inject(Utils);\n\n  constructor() {}\n\n  // ##### SIGNALS\n  itemsList = signal(['Apples', 'Bananas', 'Pears']);\n  newUser = signal<User>({ name: 'John', lastName: 'Doe', age: 20 });\n\n  // ##### METHODS\n  /**\n   * Opens modal component 1\n   */\n  async openModal() {\n    const modalResp = await this.utils.showGenericModal(ModalSampleComponent, {\n      bodyText:\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin sagittis pretium massa, at pretium tortor congue nec.',\n    });\n    console.log('MODAL RESP:', modalResp);\n  }\n\n  /**\n   * Opens modal component 2\n   */\n  async openModal2() {\n    const modalResp = await this.utils.showGenericModal(\n      ModalSample2Component,\n      {}\n    );\n    console.log('MODAL RESP:', modalResp);\n  }\n\n  // ##### LC HOOKS\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./details.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 32
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>Details</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <p>State values {{ appStore.clientName() }}</p>\n  <ul>\n    @for (item of itemsList(); track item) {\n    <li>{{ item }}</li>\n    }\n  </ul>\n  @if (appStore.clientName() == 'Pablo') {\n  <p>CONTENT IS SHOWING</p>\n  }\n  <ion-button (click)=\"openModal()\">Show modal</ion-button>\n  <ion-button (click)=\"openModal2()\">Show modal 2</ion-button>\n</ion-content>\n"
        },
        {
            "name": "FormPage",
            "id": "component-FormPage-0dcbb6492691ad260f0b37a068c220c96c0239dc7a5dc172d4ab036fabc2dbad57948a60640ba89fc148bcd6c77f0e9a537be757cce4a0dcd28260feadfb7ce4",
            "file": "src/app/views/form/form.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form",
            "styleUrls": [
                "./form.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form.page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "lastName",
                    "defaultValue": "signal('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "name",
                    "defaultValue": "signal('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [
                {
                    "name": "alertFullName",
                    "args": [
                        {
                            "name": "emitEvent",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOpens an alert with the full name emited child from component\n\n\n```html\n```typescript\nconst nameObj = { name: 'John', lastName: 'Doe' }\nalertFullName(nameObj);\n```\n```",
                    "description": "<p>Opens an alert with the full name emited child from component</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```typescript\nconst nameObj = { name: &#39;John&#39;, lastName: &#39;Doe&#39; }\nalertFullName(nameObj);</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 870,
                                "end": 879,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "emitEvent"
                            },
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 864,
                                "end": 869,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Emited param from child component</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 927,
                                "end": 934,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "example"
                            },
                            "comment": "<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">const nameObj = { name: &#39;John&#39;, lastName: &#39;Doe&#39; }\nalertFullName(nameObj);</code></pre></div>"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonContent"
                },
                {
                    "name": "IonHeader"
                },
                {
                    "name": "IonTitle"
                },
                {
                    "name": "IonToolbar"
                },
                {
                    "name": "IonList"
                },
                {
                    "name": "IonItem"
                },
                {
                    "name": "IonInput"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "FullNameComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, signal } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n  IonContent,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  IonList,\n  IonItem,\n  IonInput,\n} from '@ionic/angular/standalone';\n\n// ##### COMPONENTS\nimport { FullNameComponent } from 'src/app/components/full-name/full-name.component';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.page.html',\n  styleUrls: ['./form.page.scss'],\n  standalone: true,\n  imports: [\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonList,\n    IonItem,\n    IonInput,\n    FormsModule,\n    FullNameComponent,\n  ],\n})\nexport class FormPage {\n  constructor() {}\n\n  // ##### SIGNALS\n  name = signal('');\n  lastName = signal('');\n\n  // ##### METHODS\n  /**\n   * Opens an alert with the full name emited child from component\n   *\n   * @param emitEvent - Emited param from child component\n   *\n   * @example\n   * ```typescript\n   * const nameObj = { name: 'John', lastName: 'Doe' }\n   * alertFullName(nameObj);\n   * ```\n   */\n  alertFullName(emitEvent: { name: string; lastName: string }) {\n    alert(`${emitEvent.name} ${emitEvent.lastName}`);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./form.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 34
            },
            "extends": [],
            "templateData": "<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>form</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">form</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-list>\n    <ion-item>\n      <ion-input type=\"text\" placeholder=\"Name\" [(ngModel)]=\"name\"></ion-input>\n    </ion-item>\n    <ion-item>\n      <ion-input\n        placeholder=\"Last name\"\n        type=\"text\"\n        [(ngModel)]=\"lastName\"></ion-input>\n    </ion-item>\n  </ion-list>\n  <app-full-name\n    [n]=\"name()\"\n    [ln]=\"lastName()\"\n    (nameOutput)=\"alertFullName($event)\"></app-full-name>\n</ion-content>\n"
        },
        {
            "name": "FullNameComponent",
            "id": "component-FullNameComponent-f79715d8121a1a374096f451be0a3ca4cb214d48b6059b3b20cdb2e5af8ac5705b5ac0cd6838800807f13f71d28a2bd4f55d86317bb5f208f2f8d343c42d6d85",
            "file": "src/app/components/full-name/full-name.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-full-name",
            "styleUrls": [
                "./full-name.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./full-name.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "ln",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "required": true
                },
                {
                    "name": "n",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fullName",
                    "defaultValue": "computed(() => `${this.n()} ${this.ln()}`)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Emits a call to parent component (output) containing the name and last name in upper case</p>\n",
                    "line": 36,
                    "rawdescription": "\n\nEmits a call to parent component (output) containing the name and last name in upper case\n"
                },
                {
                    "name": "ln",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "required": true
                },
                {
                    "name": "n",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "required": true
                },
                {
                    "name": "nameOutput",
                    "defaultValue": "output<{ name: string; lastName: string }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "callCompOutput",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits a call to parent component (output) containing the name and last name in upper case\n",
                    "description": "<p>Emits a call to parent component (output) containing the name and last name in upper case</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "IonButton"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, output, computed } from '@angular/core';\nimport { IonButton } from '@ionic/angular/standalone';\n\n@Component({\n  selector: 'app-full-name',\n  templateUrl: './full-name.component.html',\n  styleUrls: ['./full-name.component.scss'],\n  imports: [IonButton],\n})\nexport class FullNameComponent {\n  constructor() {}\n\n  // ##### INPUTS\n  n = input.required<string>();\n  ln = input.required<string>();\n\n  // ##### OUTPUTS\n  nameOutput = output<{ name: string; lastName: string }>();\n\n  // ##### METHODS\n  /**\n   * Emits a call to parent component (output) containing the name and last name in upper case\n   */\n  callCompOutput() {\n    this.nameOutput.emit({\n      name: this.n().toUpperCase(),\n      lastName: this.ln().toUpperCase(),\n    });\n  }\n\n  // ##### COMPUTED\n  /**\n   * Emits a call to parent component (output) containing the name and last name in upper case\n   */\n  fullName = computed(() => `${this.n()} ${this.ln()}`);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-name {\n  text-align: center;\n  margin-top: 15px;\n}",
                    "styleUrl": "./full-name.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "extends": [],
            "templateData": "<h1 class=\"full-name\">{{ fullName() }}</h1>\n<ion-button expand=\"block\" (click)=\"callCompOutput()\">Call output</ion-button>\n"
        },
        {
            "name": "GbBtnComponent",
            "id": "component-GbBtnComponent-748cce26263a8e60ead57e5d0711d5bf5cd8a41296ff38d0ae14d06f0ed9e7fb27a44b4509f3f1b64f15bb88c0b0c3fd848e82eaadef7ed15fc626905292c803",
            "file": "src/app/components/global/gb-btn/gb-btn.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gb-btn",
            "styleUrls": [
                "./gb-btn.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gb-btn.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "required": false
                },
                {
                    "name": "level",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classes",
                    "defaultValue": "computed(() => {\n    const c = this.color();\n    const l = this.level();\n    const h = this.level() + 100 > 950 ? 950 : this.level() + 100;\n    const a = this.level() + 200 > 950 ? 950 : this.level() + 200;\n    const d = this.level() - 200 < 25 ? 25 : this.level() - 200;\n    let classes =\n      'rounded-full inline-flex items-center justify-center py-3 px-7 text-center text-base font-medium gap-2.5';\n    if (this.fill() == 'solid')\n      classes += ` bg-gb-${c}-${l} text-white active:bg-gb-${c}-${a} disabled:bg-gb-${c}-${d} hover:bg-gb-${c}-${h} border-gb-${c}-${l} active:border-gb-${c}-${a} hover:border-gb-${c}-${h}`;\n    if (this.fill() == 'outline')\n      classes += `  text-gb-${c}-${l} bg-gb-no-color border-gb-${c}-${l} hover:bg-gb-${c}-50 active:bg-gb-${c}-${l} active:text-gb-${c}-50 disabled:bg-no-color disabled:border-gb-${c}-${d} disabled:text-gb-${c}-${d}`;\n    classes += ` ${this.extraClasses()}`;\n    return classes;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "color",
                    "defaultValue": "input('blue')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "required": false
                },
                {
                    "name": "extraClasses",
                    "defaultValue": "input('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "fill",
                    "defaultValue": "input<'solid' | 'outline'>('solid')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "icon",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "iconPosition",
                    "defaultValue": "input<'left' | 'right'>('left')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "label",
                    "defaultValue": "input('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "level",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "required": false
                },
                {
                    "name": "spinner",
                    "defaultValue": "input<\n    | 'dots'\n    | 'lines'\n    | 'lines-small'\n    | 'lines-sharp'\n    | 'lines-sharp-small'\n    | 'bubbles'\n    | 'circles'\n    | 'circular'\n    | 'crescent'\n  >()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "spinnerPosition",
                    "defaultValue": "input<'left' | 'right'>('left')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "IonIcon"
                },
                {
                    "name": "IonSpinner"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, computed } from '@angular/core';\nimport { IonIcon, IonSpinner } from '@ionic/angular/standalone';\nimport { addIcons } from 'ionicons';\nimport * as icons from 'ionicons/icons';\n\n@Component({\n  selector: 'gb-btn',\n  templateUrl: './gb-btn.component.html',\n  styleUrls: ['./gb-btn.component.scss'],\n  imports: [IonIcon, IonSpinner],\n})\nexport class GbBtnComponent {\n  constructor() {\n    addIcons(icons);\n  }\n\n  // ##### INPUTS\n  label = input('');\n  color = input('blue');\n  level = input(500);\n  fill = input<'solid' | 'outline'>('solid');\n  icon = input<string>('');\n  iconPosition = input<'left' | 'right'>('left');\n  spinner = input<\n    | 'dots'\n    | 'lines'\n    | 'lines-small'\n    | 'lines-sharp'\n    | 'lines-sharp-small'\n    | 'bubbles'\n    | 'circles'\n    | 'circular'\n    | 'crescent'\n  >();\n  spinnerPosition = input<'left' | 'right'>('left');\n  disabled = input(false);\n  extraClasses = input('');\n\n  // ##### COMPUTED\n  classes = computed(() => {\n    const c = this.color();\n    const l = this.level();\n    const h = this.level() + 100 > 950 ? 950 : this.level() + 100;\n    const a = this.level() + 200 > 950 ? 950 : this.level() + 200;\n    const d = this.level() - 200 < 25 ? 25 : this.level() - 200;\n    let classes =\n      'rounded-full inline-flex items-center justify-center py-3 px-7 text-center text-base font-medium gap-2.5';\n    if (this.fill() == 'solid')\n      classes += ` bg-gb-${c}-${l} text-white active:bg-gb-${c}-${a} disabled:bg-gb-${c}-${d} hover:bg-gb-${c}-${h} border-gb-${c}-${l} active:border-gb-${c}-${a} hover:border-gb-${c}-${h}`;\n    if (this.fill() == 'outline')\n      classes += `  text-gb-${c}-${l} bg-gb-no-color border-gb-${c}-${l} hover:bg-gb-${c}-50 active:bg-gb-${c}-${l} active:text-gb-${c}-50 disabled:bg-no-color disabled:border-gb-${c}-${d} disabled:text-gb-${c}-${d}`;\n    classes += ` ${this.extraClasses()}`;\n    return classes;\n  });\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./gb-btn.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "extends": [],
            "templateData": "<button [class]=\"classes()\" [disabled]=\"disabled()\">\n  @if (spinner() && spinnerPosition() == 'left') {\n    <ion-spinner [name]=\"spinner()\" [color]=\"color()\"></ion-spinner>\n  }\n  @if (icon() && iconPosition() == 'left') {\n    <ion-icon [name]=\"icon()\"></ion-icon>\n  }\n  {{ label() }}\n  @if (icon() && iconPosition() == 'right') {\n    <ion-icon [name]=\"icon()\"></ion-icon>\n  }\n  @if (spinner() && spinnerPosition() == 'right') {\n    <ion-spinner [name]=\"spinner()\" [color]=\"color()\"></ion-spinner>\n  }\n</button>\n"
        },
        {
            "name": "GbCheckboxComponent",
            "id": "component-GbCheckboxComponent-f7a26232c01a4e49d23ea75a7e91d8548abdf5e4b2f7166bbb45209d2463df640fa56a69f2d2ac3882aa8a6f79c4a3fddf289ba222f2c50699e823be9d600354",
            "file": "src/app/components/global/gb-checkbox/gb-checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gb-checkbox",
            "styleUrls": [
                "./gb-checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gb-checkbox.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "required": false
                },
                {
                    "name": "level",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "required": false
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "required": true
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "classes",
                    "defaultValue": "computed(() => {\n    const c = this.color();\n    const l = this.level();\n    let classes = `flex items-center justify-center w-5 h-5 mr-4 border border-stroke rounded box box:border-gb-${c}-${l}`;\n    if (this.disabled()) classes += ` bg-gray-2`;\n    classes += ` ${this.extraClasses()}`;\n    return classes;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "color",
                    "defaultValue": "input('blue')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "required": false
                },
                {
                    "name": "extraClasses",
                    "defaultValue": "input('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "label",
                    "defaultValue": "input('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "level",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "required": false
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "required": true
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "required": true
                },
                {
                    "name": "valueChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "updateValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, output, computed } from '@angular/core';\n\n@Component({\n  selector: 'gb-checkbox',\n  templateUrl: './gb-checkbox.component.html',\n  styleUrls: ['./gb-checkbox.component.scss'],\n})\nexport class GbCheckboxComponent {\n  // ##### INPUTS\n  name = input.required<string>();\n  value = input.required<boolean>();\n  label = input('');\n  color = input('blue');\n  level = input(500);\n  disabled = input(false);\n  extraClasses = input('');\n\n  // OUTPUTS\n  valueChange = output<boolean>();\n\n  // ##### METHODS\n  updateValue(): void {\n    this.valueChange.emit(!this.value());\n  }\n\n  // ##### COMPUTED\n  classes = computed(() => {\n    const c = this.color();\n    const l = this.level();\n    let classes = `flex items-center justify-center w-5 h-5 mr-4 border border-stroke rounded box box:border-gb-${c}-${l}`;\n    if (this.disabled()) classes += ` bg-gray-2`;\n    classes += ` ${this.extraClasses()}`;\n    return classes;\n  });\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./gb-checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<label\n  [for]=\"name()\"\n  [class]=\"\n    'flex items-center select-none text-dark' +\n    ' ' +\n    (disabled() ? 'cursor-not-allowed' : 'cursor-pointer')\n  \">\n  <div class=\"relative\">\n    <input\n      type=\"checkbox\"\n      [id]=\"name()\"\n      class=\"sr-only\"\n      (click)=\"updateValue()\"\n      [checked]=\"value()\"\n      [disabled]=\"disabled()\" />\n    <div [class]=\"classes()\">\n      <span class=\"opacity-0\">\n        <svg\n          width=\"11\"\n          height=\"8\"\n          viewBox=\"0 0 11 8\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M10.0915 0.951972L10.0867 0.946075L10.0813 0.940568C9.90076 0.753564 9.61034 0.753146 9.42927 0.939309L4.16201 6.22962L1.58507 3.63469C1.40401 3.44841 1.11351 3.44879 0.932892 3.63584C0.755703 3.81933 0.755703 4.10875 0.932892 4.29224L0.932878 4.29225L0.934851 4.29424L3.58046 6.95832C3.73676 7.11955 3.94983 7.2 4.1473 7.2C4.36196 7.2 4.55963 7.11773 4.71406 6.9584L10.0468 1.60234C10.2436 1.4199 10.2421 1.1339 10.0915 0.951972ZM4.2327 6.30081L4.2317 6.2998C4.23206 6.30015 4.23237 6.30049 4.23269 6.30082L4.2327 6.30081Z\"\n            [class]=\"'fill-gb-' + color() + '-' + level()\"\n            stroke-width=\"0.4\" />\n        </svg>\n      </span>\n    </div>\n  </div>\n  {{ label() }}\n</label>\n"
        },
        {
            "name": "GbInputComponent",
            "id": "component-GbInputComponent-e40596da96800149081d4535aef8c15ea2f7e81f90bcda4ffdb83af4166db2c6b8c580632ccc3adb56150b939a43b8f3dec56172551fcf29a0b54519720d995e",
            "file": "src/app/components/global/gb-input/gb-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gb-input",
            "styleUrls": [
                "./gb-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gb-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "classes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "required": false
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "required": false
                },
                {
                    "name": "level",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "required": false
                },
                {
                    "name": "passwordToggle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "required": false
                },
                {
                    "name": "color",
                    "defaultValue": "input('blue')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "required": false
                },
                {
                    "name": "extraClasses",
                    "defaultValue": "input('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "required": false
                },
                {
                    "name": "inType",
                    "defaultValue": "signal('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "isShowingPassword",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "level",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "required": false
                },
                {
                    "name": "model",
                    "defaultValue": "signal<string | number>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "passwordToggle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "required": false
                },
                {
                    "name": "placeholder",
                    "defaultValue": "input('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "regex",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "type",
                    "defaultValue": "input<'text' | 'password' | 'email' | 'number'>('text')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "value",
                    "defaultValue": "input.required<string | number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "valueChange",
                    "defaultValue": "output<string | number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                }
            ],
            "methodsClass": [
                {
                    "name": "isValid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "togglePass",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "IonIcon"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  input,\n  output,\n  signal,\n  OnInit,\n  effect,\n  computed,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IonIcon } from '@ionic/angular/standalone';\nimport { addIcons } from 'ionicons';\nimport * as icons from 'ionicons/icons';\n\n@Component({\n  selector: 'gb-input',\n  templateUrl: './gb-input.component.html',\n  styleUrls: ['./gb-input.component.scss'],\n  imports: [FormsModule, IonIcon],\n})\nexport class GbInputComponent implements OnInit {\n  constructor() {\n    addIcons(icons);\n    // ##### EFFECTS\n    effect(() => {\n      this.valueChange.emit(this.model());\n    });\n  }\n  // ##### INPUTS\n  type = input<'text' | 'password' | 'email' | 'number'>('text');\n  placeholder = input('');\n  value = input.required<string | number>();\n  color = input('blue');\n  level = input(500);\n  icon = input<string>();\n  disabled = input(false);\n  extraClasses = input('');\n  passwordToggle = input(false);\n  regex = input<string>('');\n\n  // ##### SIGNALS\n  model = signal<string | number>('');\n  isShowingPassword = signal(false);\n  inType = signal('');\n\n  // ##### METHODS\n  togglePass() {\n    this.isShowingPassword.update(val => (val = !val));\n    if (this.isShowingPassword()) this.inType.update(val => (val = 'text'));\n    else this.inType.update(val => (val = 'password'));\n  }\n\n  // OUTPUTS\n  valueChange = output<string | number>();\n\n  // ##### COMPUTED\n  classes = computed(() => {\n    const c = this.color();\n    const l = this.level();\n    let classes = `w-full bg-transparent rounded-md border border-stroke outline-none transition py-[10px] pr-3`;\n    if (this.icon()) classes += ` pl-12`;\n    else classes += ` pl-3`;\n    classes += ` focus:border-gb-${c}-${l}`;\n    if (this.regex() && this.model()) {\n      if (this.isValid())\n        classes += ' focus:border-gb-success-500 border-gb-success-500';\n      else classes += ' focus:border-gb-error-500 border-gb-error-500';\n    }\n    classes += ` ${this.extraClasses()}`;\n    return classes;\n  });\n\n  isValid() {\n    const reg = new RegExp(this.regex());\n    return reg.test(`${this.model()}`);\n  }\n\n  // ##### LC HOOKS\n  ngOnInit(): void {\n    this.model.update(val => (val = this.value()));\n    this.inType.update(val => (val = this.type()));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./gb-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"relative\">\n  <input\n    [type]=\"inType()\"\n    [placeholder]=\"placeholder()\"\n    [(ngModel)]=\"model\"\n    [class]=\"classes()\"\n    [disabled]=\"disabled()\" />\n  <ion-icon\n    [name]=\"icon()\"\n    class=\"absolute top-1/2 left-4 -translate-y-1/2\"\n    color=\"medium\" />\n  @if (type() == 'password' && passwordToggle()) {\n    <ion-icon\n      [name]=\"isShowingPassword() ? 'eye-off-outline' : 'eye-outline'\"\n      class=\"absolute top-1/2 right-4 -translate-y-1/2 cursor-pointer\"\n      color=\"medium\"\n      (click)=\"togglePass()\" />\n  }\n</div>\n"
        },
        {
            "name": "GbToggleComponent",
            "id": "component-GbToggleComponent-56c1c73428ac7927c177efcad9035895c9d19d70b24c3f76c61bfb48a42e513ebd1f2230a037340580c9282468ef4cf7743ed44809dfbc5c51207394b8ed1487",
            "file": "src/app/components/global/gb-toggle/gb-toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gb-toggle",
            "styleUrls": [
                "./gb-toggle.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gb-toggle.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "required": false
                },
                {
                    "name": "level",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "required": false
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "required": true
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "classes",
                    "defaultValue": "computed(() => {\n    let c = this.color();\n    let l = this.level();\n    let classes = `slider mx-4 flex h-8 w-[60px] items-center rounded-full p-1 duration-200`;\n    if (this.disabled()) classes += ` slider:bg-gb-${c}-200 bg-gray-3`;\n    else classes += ` slider:bg-gb-${c}-${l} bg-[#CCCCCE]`;\n    return classes;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "color",
                    "defaultValue": "input('blue')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "required": false
                },
                {
                    "name": "extraClasses",
                    "defaultValue": "input('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "label",
                    "defaultValue": "input('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "labelClasses",
                    "defaultValue": "computed(() => {\n    let classes =\n      'themeSwitcherTwo relative inline-flex select-none items-center';\n    if (this.disabled()) classes += ` cursor-not-allowed`;\n    else classes += ` cursor-pointer`;\n    return classes;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "labelPosition",
                    "defaultValue": "input<'left' | 'right'>('left')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "level",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "required": false
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "required": true
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "required": true
                },
                {
                    "name": "valueChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "updateValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, output, computed } from '@angular/core';\n\n@Component({\n  selector: 'gb-toggle',\n  templateUrl: './gb-toggle.component.html',\n  styleUrls: ['./gb-toggle.component.scss'],\n})\nexport class GbToggleComponent {\n  // ##### INPUTS\n  name = input.required<string>();\n  value = input.required<boolean>();\n  label = input('');\n  labelPosition = input<'left' | 'right'>('left');\n  color = input('blue');\n  level = input(500);\n  disabled = input(false);\n  extraClasses = input('');\n\n  // ##### OUTPUTS\n  valueChange = output<boolean>();\n\n  updateValue(): void {\n    this.valueChange.emit(!this.value());\n  }\n\n  // ##### COMPUTED\n  classes = computed(() => {\n    let c = this.color();\n    let l = this.level();\n    let classes = `slider mx-4 flex h-8 w-[60px] items-center rounded-full p-1 duration-200`;\n    if (this.disabled()) classes += ` slider:bg-gb-${c}-200 bg-gray-3`;\n    else classes += ` slider:bg-gb-${c}-${l} bg-[#CCCCCE]`;\n    return classes;\n  });\n\n  labelClasses = computed(() => {\n    let classes =\n      'themeSwitcherTwo relative inline-flex select-none items-center';\n    if (this.disabled()) classes += ` cursor-not-allowed`;\n    else classes += ` cursor-pointer`;\n    return classes;\n  });\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./gb-toggle.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<label [for]=\"name()\" [class]=\"labelClasses()\">\n  <input\n    type=\"checkbox\"\n    [name]=\"name()\"\n    [id]=\"name()\"\n    class=\"sr-only\"\n    (click)=\"updateValue()\"\n    [checked]=\"value()\"\n    [disabled]=\"disabled()\" />\n  @if (labelPosition() == 'left') {\n    <span class=\"label flex items-center text-sm font-medium text-dark\">\n      {{ label() }}\n    </span>\n  }\n  <span [class]=\"classes()\">\n    <span class=\"dot h-6 w-6 rounded-full bg-white duration-200\"></span>\n  </span>\n  @if (labelPosition() == 'right') {\n    <span class=\"label flex items-center text-sm font-medium text-dark\">\n      {{ label() }}\n    </span>\n  }\n</label>\n"
        },
        {
            "name": "HomePage",
            "id": "component-HomePage-9e343384dbae46282227b1aeeca73be7044353c6ab182a4d9ce2a953a75cd760555ae461ee40d8e96f8c0f58633fa114e370779b9e1b082318654fd92f3bb87c",
            "file": "src/app/views/home/home.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "home.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "home.page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appStore",
                    "defaultValue": "inject(AppStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "canAdd",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "count",
                    "defaultValue": "signal(0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "doubleCount",
                    "defaultValue": "computed(() => this.count() * 2)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Calculates the counter value multiplied by 2</p>\n",
                    "line": 69,
                    "rawdescription": "\n\nCalculates the counter value multiplied by 2\n",
                    "jsdoctags": [
                        {
                            "pos": 1396,
                            "end": 1443,
                            "kind": 342,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 1397,
                                "end": 1404,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Will return number counter doubled</p>\n"
                        }
                    ]
                },
                {
                    "name": "inputText",
                    "defaultValue": "signal('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                }
            ],
            "methodsClass": [
                {
                    "name": "add",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIncreases the counter value by one\n",
                    "description": "<p>Increases the counter value by one</p>\n"
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLogs the user out and redirects to the login view\n",
                    "description": "<p>Logs the user out and redirects to the login view</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "IonHeader"
                },
                {
                    "name": "IonToolbar"
                },
                {
                    "name": "IonTitle"
                },
                {
                    "name": "IonContent"
                },
                {
                    "name": "IonButton"
                },
                {
                    "name": "IonToggle"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, signal, computed, effect, inject } from '@angular/core';\nimport {\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n  IonButton,\n  IonToggle,\n} from '@ionic/angular/standalone';\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\n// ##### SERVICES\nimport { AppStore } from 'src/app/stores/app-store.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n  imports: [\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonContent,\n    IonButton,\n    IonToggle,\n    FormsModule,\n  ],\n})\nexport class HomePage {\n  // ##### INJECTIONS\n  appStore = inject(AppStore);\n\n  constructor(private router: Router) {\n    effect(() => {\n      console.log(`COUNT INCREASED ${this.count()}`);\n    });\n  }\n\n  // ##### SIGNALS\n  count = signal(0);\n  canAdd = signal(false);\n  inputText = signal('');\n\n  // ##### METHODS\n  /**\n   * Logs the user out and redirects to the login view\n   */\n  logout() {\n    this.router.navigate(['/base/login']);\n  }\n\n  /**\n   * Increases the counter value by one\n   */\n  add() {\n    console.log('UPDATE STATE');\n    this.appStore.clientName.set('Pablo');\n    console.log('STATE UPDATED', this.appStore.clientName());\n    this.count.update(val => val + 1);\n  }\n\n  // ##### COMPUTED\n  /**\n   * Calculates the counter value multiplied by 2\n   * @returns Will return number counter doubled\n   */\n  doubleCount = computed(() => this.count() * 2);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "home.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>Home</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <p>Counter: {{ count() }}</p>\n  <p>Double: {{ doubleCount() }}</p>\n  <ion-button (click)=\"logout()\" color=\"gb-blue-600\">Logout </ion-button>\n  <ion-button (click)=\"add()\" color=\"success\" [disabled]=\"!canAdd()\"> Add </ion-button>\n  <ion-toggle [(ngModel)]=\"canAdd\" color=\"gb-pink-800\">Can add</ion-toggle>\n</ion-content>\n"
        },
        {
            "name": "InputPage",
            "id": "component-InputPage-258fc186a4d02e9f8d3cb6ee2d13ddca15ee17fca3033616e23d89bf1c132b2c02667139c3455bc38c9fd10ca09170aafc262fbb24b11884e00ae447479ad693",
            "file": "src/app/views/global-bank-components/input/input.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input",
            "styleUrls": [
                "./input.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "colors",
                    "defaultValue": "'<gb-input [(value)]=\"input1\" placeholder=\"Type here\" color=\"blue\" />\\n<gb-input [(value)]=\"input1\" placeholder=\"Type here\" color=\"pink\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "disabled",
                    "defaultValue": "'<gb-input [(value)]=\"input1\" placeholder=\"Type here\" [disabled]=\"true\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "icon",
                    "defaultValue": "'<gb-input [(value)]=\"input1\" placeholder=\"Type here\" icon=\"person-outline\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "input1",
                    "defaultValue": "signal('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "primary",
                    "defaultValue": "'<gb-input [(value)]=\"input1\" placeholder=\"Type here\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "type",
                    "defaultValue": "'<gb-input [(value)]=\"input1\" placeholder=\"Type text (default)\" />\\n<gb-input [(value)]=\"input1\" placeholder=\"Type password\" [passwordToggle]=\"true\" type=\"password\" />\\n<gb-input [(value)]=\"input1\" placeholder=\"Type email (for mobile)\" type=\"email\" />\\n<gb-input [(value)]=\"input1\" placeholder=\"Type number\" type=\"number\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "validation",
                    "defaultValue": "'<gb-input [(value)]=\"input1\" placeholder=\"Type here\" regex=\"^[A-Za-z0-9]{6,}$\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonContent"
                },
                {
                    "name": "GbInputComponent",
                    "type": "component"
                },
                {
                    "name": "IonRow"
                },
                {
                    "name": "IonCol"
                },
                {
                    "name": "Highlight"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, signal } from '@angular/core';\nimport { IonContent, IonRow, IonCol } from '@ionic/angular/standalone';\n\n// ##### GB COMPONENTS\nimport { GbInputComponent } from 'src/app/components/global/gb-input/gb-input.component';\n\n// ##### OTHER IMPORTS\nimport { Highlight } from 'ngx-highlightjs';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.page.html',\n  styleUrls: ['./input.page.scss'],\n  standalone: true,\n  imports: [IonContent, GbInputComponent, IonRow, IonCol, Highlight],\n})\nexport class InputPage {\n  // ##### INPUTS\n  input1 = signal('');\n\n  primary = '<gb-input [(value)]=\"input1\" placeholder=\"Type here\" />';\n  type =\n    '<gb-input [(value)]=\"input1\" placeholder=\"Type text (default)\" />\\n<gb-input [(value)]=\"input1\" placeholder=\"Type password\" [passwordToggle]=\"true\" type=\"password\" />\\n<gb-input [(value)]=\"input1\" placeholder=\"Type email (for mobile)\" type=\"email\" />\\n<gb-input [(value)]=\"input1\" placeholder=\"Type number\" type=\"number\" />';\n  disabled =\n    '<gb-input [(value)]=\"input1\" placeholder=\"Type here\" [disabled]=\"true\" />';\n  colors =\n    '<gb-input [(value)]=\"input1\" placeholder=\"Type here\" color=\"blue\" />\\n<gb-input [(value)]=\"input1\" placeholder=\"Type here\" color=\"pink\" />';\n  icon =\n    '<gb-input [(value)]=\"input1\" placeholder=\"Type here\" icon=\"person-outline\" />';\n  validation =\n    '<gb-input [(value)]=\"input1\" placeholder=\"Type here\" regex=\"^[A-Za-z0-9]{6,}$\" />';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./input.page.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<ion-content [fullscreen]=\"true\">\n  <div class=\"gb-pa-4xl\">\n    <div class=\"display-lg w700 gb-mb-4xl\">GB Input</div>\n    <!-- Primary -->\n    <div class=\"display-sm w600\">Input</div>\n    <div class=\"text-md\">\n      Input principal, por defecto obtiene el color primario del banco.\n    </div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-input [(value)]=\"input1\" placeholder=\"Type here\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"primary\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Type -->\n    <div class=\"display-sm w600\">Input type</div>\n    <div class=\"text-md\">Indica el tipo de input.</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-input [(value)]=\"input1\" placeholder=\"Type text (default)\" />\n              <br />\n              <gb-input\n                [(value)]=\"input1\"\n                placeholder=\"Type password\"\n                [passwordToggle]=\"true\"\n                type=\"password\" />\n              <br />\n              <gb-input\n                [(value)]=\"input1\"\n                placeholder=\"Type email (for mobile)\"\n                type=\"email\" />\n              <br />\n              <gb-input\n                [(value)]=\"input1\"\n                placeholder=\"Type number\"\n                type=\"number\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"type\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Disabled -->\n    <div class=\"display-sm w600\">Input disabled</div>\n    <div class=\"text-md\">Input deshabilitado.</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-input\n                [(value)]=\"input1\"\n                placeholder=\"Type here\"\n                [disabled]=\"true\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"disabled\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Colors -->\n    <div class=\"display-sm w600\">Input colors</div>\n    <div class=\"text-md\">Indica el color del input.</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-input\n                [(value)]=\"input1\"\n                placeholder=\"Type here\"\n                color=\"blue\" />\n              <br />\n              <gb-input\n                [(value)]=\"input1\"\n                placeholder=\"Type here\"\n                color=\"pink\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"colors\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Icon -->\n    <div class=\"display-sm w600\">Input icon</div>\n    <div class=\"text-md\">Asigna un icono al inicio del input</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-input\n                [(value)]=\"input1\"\n                placeholder=\"Type here\"\n                icon=\"person-outline\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"icon\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Validation -->\n    <div class=\"display-sm w600\">Input validation</div>\n    <div class=\"text-md\">Valida el valor ingresado en el input segun regex</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-input\n                [(value)]=\"input1\"\n                placeholder=\"Type here\"\n                regex=\"^[A-Za-z0-9]{6,}$\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"validation\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n  </div>\n</ion-content>\n"
        },
        {
            "name": "LoginPage",
            "id": "component-LoginPage-06005367f82c7c4cfa6e42c71e9a1b1deb1769817e3efe0b287e03f3a87a06314879bc1a04d772788218483de0eae68b20c8840af9d336084d91d250d01438f9",
            "file": "src/app/views/login/login.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appStore",
                    "defaultValue": "inject(AppStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "inputText",
                    "defaultValue": "signal('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "isChecked",
                    "defaultValue": "signal(true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "isToggled",
                    "defaultValue": "signal(true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "isValidUserAndPass",
                    "defaultValue": "computed(() => {\n    const isValidEmail = this.appStore.emailRegex.test(this.user());\n    const isValidPass = this.appStore.passRegex.test(this.pass());\n    return !(isValidEmail && isValidPass);\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "levels",
                    "defaultValue": "signal([25, 50, 100, 200, 300, 400, 500, 600, 700, 800, 900, 950])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "pass",
                    "defaultValue": "signal('123456')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "user",
                    "defaultValue": "signal('test@email.com')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methodsClass": [
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonContent"
                },
                {
                    "name": "IonHeader"
                },
                {
                    "name": "IonTitle"
                },
                {
                    "name": "IonButton"
                },
                {
                    "name": "IonToolbar"
                },
                {
                    "name": "IonList"
                },
                {
                    "name": "IonItem"
                },
                {
                    "name": "IonInput"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, signal, computed, inject } from '@angular/core';\nimport {\n  IonContent,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  IonButton,\n  IonList,\n  IonItem,\n  IonInput,\n} from '@ionic/angular/standalone';\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\n// ##### SERVICES\nimport { AppStore } from 'src/app/stores/app-store.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n  standalone: true,\n  imports: [\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonButton,\n    IonToolbar,\n    IonList,\n    IonItem,\n    IonInput,\n    FormsModule,\n  ],\n})\nexport class LoginPage {\n  // ##### INJECTIONS\n  appStore = inject(AppStore);\n\n  constructor(private router: Router) {}\n\n  // ##### SIGNALS\n  user = signal('test@email.com');\n  pass = signal('123456');\n  isToggled = signal(true);\n  isChecked = signal(true);\n  inputText = signal('');\n  levels = signal([25, 50, 100, 200, 300, 400, 500, 600, 700, 800, 900, 950]);\n\n  // ##### METHODS\n  login() {\n    this.router.navigate(['/app/home']);\n  }\n\n  // ##### COMPUTED\n  isValidUserAndPass = computed(() => {\n    const isValidEmail = this.appStore.emailRegex.test(this.user());\n    const isValidPass = this.appStore.passRegex.test(this.pass());\n    return !(isValidEmail && isValidPass);\n  });\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./login.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 38,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>Login</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <div style=\"padding: 10px\">\n    <ion-list>\n      <ion-item>\n        <ion-input\n          label=\"User\"\n          type=\"email\"\n          placeholder=\"test@email.com\"\n          [(ngModel)]=\"user\">\n        </ion-input>\n      </ion-item>\n      <ion-item>\n        <ion-input\n          label=\"Password\"\n          placeholder=\"Password\"\n          type=\"password\"\n          [(ngModel)]=\"pass\">\n        </ion-input>\n      </ion-item>\n    </ion-list>\n    <ion-button\n      color=\"gb-pink-300\"\n      (click)=\"login()\"\n      expand=\"block\"\n      [disabled]=\"isValidUserAndPass()\">\n      Login\n    </ion-button>\n    <br />\n    <div class=\"bg-gb-blue-300 gb-pa-md gb-rounded-border-md shadow-3xl\">\n      <div class=\"text-md text-gb-blue-800 w700\">Color test</div>\n    </div>\n  </div>\n</ion-content>\n"
        },
        {
            "name": "MainPage",
            "id": "component-MainPage-6c38590e999b987516aaae01b0ddfa81f91be02d7d368a24ccabb9825ae58b49199d5e0d0d657792a9dcbda5f504d82965fc63a7dc0a231c2da5054f244a85f9",
            "file": "src/app/views/global-bank-components/main/main.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-main",
            "styleUrls": [
                "./main.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./main.page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "gbComponents",
                    "defaultValue": "signal([\n    {\n      comp: 'Button',\n      route: '/button',\n    },\n    {\n      comp: 'Input',\n      route: '/input',\n    },\n    {\n      comp: 'Checkbox',\n      route: '/checkbox',\n    },\n    {\n      comp: 'Toggle',\n      route: '/toggle',\n    },\n    {\n      comp: 'Tipografía',\n      route: '/typography',\n    },\n    {\n      comp: 'Espaciados',\n      route: '/spacing',\n    },\n    {\n      comp: 'Colores',\n      route: '/colors',\n    },\n    {\n      comp: 'Sombras',\n      route: '/shadows',\n    },\n  ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "goToCompPage",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonContent"
                },
                {
                    "name": "IonRow"
                },
                {
                    "name": "IonCol"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, signal } from '@angular/core';\nimport { IonContent, IonRow, IonCol } from '@ionic/angular/standalone';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.page.html',\n  styleUrls: ['./main.page.scss'],\n  standalone: true,\n  imports: [IonContent, IonRow, IonCol],\n})\nexport class MainPage {\n  constructor(private router: Router) {}\n\n  // ##### SIGNALS\n  gbComponents = signal([\n    {\n      comp: 'Button',\n      route: '/button',\n    },\n    {\n      comp: 'Input',\n      route: '/input',\n    },\n    {\n      comp: 'Checkbox',\n      route: '/checkbox',\n    },\n    {\n      comp: 'Toggle',\n      route: '/toggle',\n    },\n    {\n      comp: 'Tipografía',\n      route: '/typography',\n    },\n    {\n      comp: 'Espaciados',\n      route: '/spacing',\n    },\n    {\n      comp: 'Colores',\n      route: '/colors',\n    },\n    {\n      comp: 'Sombras',\n      route: '/shadows',\n    },\n  ]);\n\n  // ##### METHODS\n  goToCompPage(path: string) {\n    this.router.navigate([`/base${path}`]);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./main.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<ion-content [fullscreen]=\"true\">\n  <div class=\"display-md w700 gb-pa-3xl\">Global Bank Components</div>\n  <ion-row>\n    @for (component of gbComponents(); track component) {\n    <ion-col sizeLg=\"3\">\n      <div class=\"gb-py-2xl gb-px-md\">\n        <div\n          class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n          <div class=\"p-8 text-center sm:p-9 md:p-7 xl:p-9\">\n            <div class=\"display-sm w700 gb-mb-lg\">{{component.comp}}</div>\n            <button\n              (click)=\"goToCompPage(component.route)\"\n              class=\"inline-block py-2 text-base font-medium transition border rounded-full text-body-color hover:border-primary hover:bg-primary border-gray-3 px-7 hover:text-white dark:border-dark-3 dark:text-dark-6\">\n              Ver detalles\n            </button>\n          </div>\n        </div>\n      </div>\n    </ion-col>\n    }\n  </ion-row>\n</ion-content>\n"
        },
        {
            "name": "ModalSample2Component",
            "id": "component-ModalSample2Component-2ac56e0fa63a255bf491d18d23247713eb43e93ef4a151e79d175c6bcad63d5a826d60f32a5f6df9bd89d3a66f12eb35b207a860366e6fd8d2c98ab44414d88d",
            "file": "src/app/components/modal-sample-2/modal-sample-2.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-modal-sample-2",
            "styleUrls": [
                "./modal-sample-2.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./modal-sample-2.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-modal-sample-2',\n  templateUrl: './modal-sample-2.component.html',\n  styleUrls: ['./modal-sample-2.component.scss'],\n})\nexport class ModalSample2Component  implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./modal-sample-2.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>\n  modal-sample-2 works!\n</p>\n"
        },
        {
            "name": "ModalSampleComponent",
            "id": "component-ModalSampleComponent-ed8fb87efcdabf3ac572afefd5dfe022a18ec1af3f84ad3e31196e14e5115943a8615408398f7a6c1436a3483615ba4f4dabf82b3e6975de4e27c835de879932",
            "file": "src/app/components/modal-sample/modal-sample.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-modal-sample",
            "styleUrls": [
                "./modal-sample.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./modal-sample.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "bodyText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bodyText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "required": true
                },
                {
                    "name": "showText",
                    "defaultValue": "computed(() => this.bodyText)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Returns the text to render in DOM</p>\n",
                    "line": 28,
                    "rawdescription": "\n\nReturns the text to render in DOM\n",
                    "jsdoctags": [
                        {
                            "pos": 678,
                            "end": 714,
                            "kind": 342,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 679,
                                "end": 686,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>String to render in DOM</p>\n"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeModal",
                    "args": [
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCloses the modal displayed\n",
                    "description": "<p>Closes the modal displayed</p>\n",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "IonButton"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, computed } from '@angular/core';\nimport { ModalController } from '@ionic/angular/standalone';\nimport { IonButton } from '@ionic/angular/standalone';\n\n@Component({\n  selector: 'app-modal-sample',\n  templateUrl: './modal-sample.component.html',\n  styleUrls: ['./modal-sample.component.scss'],\n  imports: [IonButton],\n})\nexport class ModalSampleComponent {\n  constructor(private modalCtrl: ModalController) {}\n\n  // ##### METHODS\n  /**\n   * Closes the modal displayed\n   */\n  closeModal(action?: string) {\n    this.modalCtrl.dismiss({ action: action });\n  }\n\n  // ##### COMPUTED\n  /**\n   * Returns the text to render in DOM\n   * @returns String to render in DOM\n   */\n  showText = computed(() => this.bodyText);\n\n  // ##### PROPS\n  bodyText = input.required<string>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./modal-sample.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalCtrl",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "modalCtrl",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"wrapper\">\n  <!-- THIS SHOWS A WARNING IF CALLED AS A VARIABLE OR AN ERROR IF CALLED AS A FUNCTION (SIGNAL)  -->\n  <!-- <p>{{ bodyText() }}</p> -->\n  <!-- FIX: HAD TO CALL IT FROM A COMPUTED -->\n  <p>{{ showText() }}</p>\n  <ion-button\n    expand=\"block\"\n    fill=\"outline\"\n    color=\"tertiary\"\n    (click)=\"closeModal('accept')\"\n  >\n    Accept\n  </ion-button>\n  <ion-button\n    expand=\"block\"\n    fill=\"outline\"\n    color=\"danger\"\n    (click)=\"closeModal()\"\n  >\n    Cancel\n  </ion-button>\n</div>\n"
        },
        {
            "name": "SpacingPage",
            "id": "component-SpacingPage-47d483a56ef53711c648a4c5b4abdb12a22c9147514c3b32674af71a7f830554d14f575e712a5ba2c3a045628e1883c131d028cbcbdd3e4d651e387c8e1f5cff",
            "file": "src/app/views/global-bank-components/spacing/spacing.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-spacing",
            "styleUrls": [
                "./spacing.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./spacing.page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "borders",
                    "defaultValue": "[\n    { class: 'gb-rounded-border', desc: 'Border radius All' },\n    { class: 'gb-rounded-border-tl', desc: 'Border radius Top Left' },\n    { class: 'gb-rounded-border-tr', desc: 'Border radius Top Right' },\n    { class: 'gb-rounded-border-bl', desc: 'Border radius Bottom Left' },\n    { class: 'gb-rounded-border-br', desc: 'Border radius Bottom Right' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "marginsAndPaddings",
                    "defaultValue": "[\n    { class: 'a', desc: 'All' },\n    { class: 'l', desc: 'Left' },\n    { class: 't', desc: 'Top' },\n    { class: 'b', desc: 'Bottom' },\n    { class: 'r', desc: 'Right' },\n    { class: 'y', desc: 'Top & Bottom' },\n    { class: 'x', desc: 'Left & Right' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "sizes",
                    "defaultValue": "[\n    { class: 'xxs', desc: '0.125 rem' },\n    { class: 'xs', desc: '0.25 rem' },\n    { class: 'sm', desc: '0.375 rem' },\n    { class: 'md', desc: '0.5 rem' },\n    { class: 'lg', desc: '0.625 rem' },\n    { class: 'xl', desc: '0.75 rem' },\n    { class: '2xl', desc: '1 rem' },\n    { class: '3xl', desc: '1.25 rem' },\n    { class: '4xl', desc: '1.5 rem' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "returnBorderRadiusCode",
                    "args": [
                        {
                            "name": "clss",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "clss",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "returnCode",
                    "args": [
                        {
                            "name": "pos",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "space",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pos",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "space",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonContent"
                },
                {
                    "name": "IonRow"
                },
                {
                    "name": "IonCol"
                },
                {
                    "name": "Highlight"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { IonContent, IonRow, IonCol } from '@ionic/angular/standalone';\n\n// ##### OTHER IMPORTS\nimport { Highlight } from 'ngx-highlightjs';\n\n@Component({\n  selector: 'app-spacing',\n  templateUrl: './spacing.page.html',\n  styleUrls: ['./spacing.page.scss'],\n  standalone: true,\n  imports: [IonContent, IonRow, IonCol, Highlight],\n})\nexport class SpacingPage {\n  marginsAndPaddings = [\n    { class: 'a', desc: 'All' },\n    { class: 'l', desc: 'Left' },\n    { class: 't', desc: 'Top' },\n    { class: 'b', desc: 'Bottom' },\n    { class: 'r', desc: 'Right' },\n    { class: 'y', desc: 'Top & Bottom' },\n    { class: 'x', desc: 'Left & Right' },\n  ];\n\n  sizes = [\n    { class: 'xxs', desc: '0.125 rem' },\n    { class: 'xs', desc: '0.25 rem' },\n    { class: 'sm', desc: '0.375 rem' },\n    { class: 'md', desc: '0.5 rem' },\n    { class: 'lg', desc: '0.625 rem' },\n    { class: 'xl', desc: '0.75 rem' },\n    { class: '2xl', desc: '1 rem' },\n    { class: '3xl', desc: '1.25 rem' },\n    { class: '4xl', desc: '1.5 rem' },\n  ];\n\n  borders = [\n    { class: 'gb-rounded-border', desc: 'Border radius All' },\n    { class: 'gb-rounded-border-tl', desc: 'Border radius Top Left' },\n    { class: 'gb-rounded-border-tr', desc: 'Border radius Top Right' },\n    { class: 'gb-rounded-border-bl', desc: 'Border radius Bottom Left' },\n    { class: 'gb-rounded-border-br', desc: 'Border radius Bottom Right' },\n  ];\n\n  // ##### METHODS\n  returnCode(pos: string, space: string) {\n    return `<div class=\"gb-${space}${pos}-md\"></div>`;\n  }\n\n  returnBorderRadiusCode(clss: string) {\n    return `<div class=\"${clss}-md\"></div>`;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./spacing.page.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<ion-content [fullscreen]=\"true\">\n  <div class=\"gb-pa-4xl\">\n    <div class=\"gb-pa-4xl\">\n      <div class=\"display-lg w700 gb-mb-4xl\">GB Spacing</div>\n    </div>\n    <!-- Sizes -->\n    <div class=\"display-sm w600\">Sizes</div>\n    <div class=\"text-md\">Tamaños de los espacios</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          @for (size of sizes; track size) {\n          <ion-row>\n            <ion-col>\n              <div>{{size.class}}</div>\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"size.desc\" language=\"css\"></code></pre>\n            </ion-col>\n          </ion-row>\n          }\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Margins -->\n    <div class=\"display-sm w600\">Margins</div>\n    <div class=\"text-md\">Tamaños margenes</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          @for (margin of marginsAndPaddings; track margin) {\n          <ion-row>\n            <ion-col>\n              <pre><code [highlight]=\"'.gb-m' + margin.class + '-md'\" language=\"css\"></code></pre>\n            </ion-col>\n            <ion-col>\n              <div>Margin {{margin.desc}}</div>\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"returnCode(margin.class, 'm')\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n          }\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Paddings -->\n    <div class=\"display-sm w600\">Paddings</div>\n    <div class=\"text-md\">Tamaños paddings</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          @for (margin of marginsAndPaddings; track margin) {\n          <ion-row>\n            <ion-col>\n              <!-- <div>.gb-p{{margin.class}}-md</div> -->\n              <pre><code [highlight]=\"'.gb-p' + margin.class + '-md'\" language=\"css\"></code></pre>\n            </ion-col>\n            <ion-col>\n              <div>Padding {{margin.desc}}</div>\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"returnCode(margin.class, 'p')\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n          }\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Border radius -->\n    <div class=\"display-sm w600\">Border radius</div>\n    <div class=\"text-md\">Tamaños para border radius</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          @for (border of borders; track border) {\n          <ion-row>\n            <ion-col>\n              <div\n                [class]=\"'bg-gb-blue-500 gb-py-md text-white ' + border.class + '-md'\">\n                {{'.' + border.class + '-md'}}\n              </div>\n            </ion-col>\n            <ion-col>\n              <div>{{border.desc}}</div>\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"returnBorderRadiusCode(border.class)\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n          }\n        </div>\n      </div>\n    </div>\n    <!--/-->\n  </div>\n</ion-content>\n"
        },
        {
            "name": "TogglePage",
            "id": "component-TogglePage-1a2795b42a30df33bf53f486a730d0711e22bbb41ba7ea259b10a152874cfdf525472bc2f2632f3d44ab4df0c99dbd99c1f8073d9028729c4e72202d5ec3fb42",
            "file": "src/app/views/global-bank-components/toggle/toggle.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toggle",
            "styleUrls": [
                "./toggle.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./toggle.page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "color",
                    "defaultValue": "'<gb-toggle name=\"toggle_4\" [(value)]=\"isToggled\" color=\"blue\" />\\n<gb-toggle name=\"toggle_5\" [(value)]=\"isToggled\" color=\"pink\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "isToggled",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "label",
                    "defaultValue": "'<gb-toggle name=\"toggle_2\" [(value)]=\"isToggled\" label=\"Toggle label\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "labelPosition",
                    "defaultValue": "'<gb-toggle name=\"toggle_3\" [(value)]=\"isToggled\" label=\"Toggle label\" labelPosition=\"right\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "primary",
                    "defaultValue": "'<gb-toggle name=\"toggle_1\" [(value)]=\"isToggled\" />'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonContent"
                },
                {
                    "name": "IonRow"
                },
                {
                    "name": "IonCol"
                },
                {
                    "name": "GbToggleComponent",
                    "type": "component"
                },
                {
                    "name": "Highlight"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, signal } from '@angular/core';\nimport { IonContent, IonRow, IonCol } from '@ionic/angular/standalone';\n\n// ##### GB COMPONENTS\nimport { GbToggleComponent } from 'src/app/components/global/gb-toggle/gb-toggle.component';\n\n// ##### OTHER IMPORTS\nimport { Highlight } from 'ngx-highlightjs';\n\n@Component({\n  selector: 'app-toggle',\n  templateUrl: './toggle.page.html',\n  styleUrls: ['./toggle.page.scss'],\n  standalone: true,\n  imports: [IonContent, IonRow, IonCol, GbToggleComponent, Highlight],\n})\nexport class TogglePage {\n  // ##### SIGNALS\n  isToggled = signal(false);\n\n  primary = '<gb-toggle name=\"toggle_1\" [(value)]=\"isToggled\" />';\n  label =\n    '<gb-toggle name=\"toggle_2\" [(value)]=\"isToggled\" label=\"Toggle label\" />';\n  labelPosition =\n    '<gb-toggle name=\"toggle_3\" [(value)]=\"isToggled\" label=\"Toggle label\" labelPosition=\"right\" />';\n  color =\n    '<gb-toggle name=\"toggle_4\" [(value)]=\"isToggled\" color=\"blue\" />\\n<gb-toggle name=\"toggle_5\" [(value)]=\"isToggled\" color=\"pink\" />';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./toggle.page.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<ion-content [fullscreen]=\"true\">\n  <div class=\"gb-pa-4xl\">\n    <div class=\"display-lg w700 gb-mb-4xl\">GB Toggle</div>\n    <!-- Primary -->\n    <div class=\"display-sm w600\">Toggle primary</div>\n    <div class=\"text-md\">\n      Toggle primario, por defecto adquiere el color principal del banco.\n    </div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-toggle name=\"toggle_1\" [(value)]=\"isToggled\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"primary\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Label -->\n    <div class=\"display-sm w600\">Toggle label</div>\n    <div class=\"text-md\">Label para identificacion del toggle.</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-toggle\n                name=\"toggle_2\"\n                [(value)]=\"isToggled\"\n                label=\"Toggle label\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"label\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Label position -->\n    <div class=\"display-sm w600\">Toggle label position</div>\n    <div class=\"text-md\">Posicion del label en el toggle.</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-toggle\n                name=\"toggle_3\"\n                [(value)]=\"isToggled\"\n                label=\"Toggle label\"\n                labelPosition=\"right\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"labelPosition\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Color -->\n    <div class=\"display-sm w600\">Toggle color</div>\n    <div class=\"text-md\">Color del toggle.</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col>\n              <gb-toggle name=\"toggle_4\" [(value)]=\"isToggled\" color=\"blue\" />\n              <gb-toggle name=\"toggle_5\" [(value)]=\"isToggled\" color=\"pink\" />\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"color\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n  </div>\n</ion-content>\n"
        },
        {
            "name": "TypographyPage",
            "id": "component-TypographyPage-df906553dcac32c8f60366d07b796e0dd76c9d5ceed4f10d4211e251b6f0df25517cd05a5d91e4d742522d2505c11729432aaeb20119bd2e804c25c0c65dcde9",
            "file": "src/app/views/global-bank-components/typography/typography.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-typography",
            "styleUrls": [
                "./typography.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./typography.page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "sizes",
                    "defaultValue": "'<div class=\"text-2xs\">Lorem ipsum.</div>\\n<div class=\"text-xs\">Lorem ipsum.</div>\\n<div class=\"text-sm\">Lorem ipsum.</div>\\n<div class=\"text-md\">Lorem ipsum.</div>\\n<div class=\"text-lg\">Lorem ipsum.</div>\\n<div class=\"text-xl\">Lorem ipsum.</div>\\n<div class=\"display-xs\">Lorem ipsum.</div>\\n<div class=\"display-sm\">Lorem ipsum.</div>\\n<div class=\"display-md\">Lorem ipsum.</div>\\n<div class=\"display-lg\">Lorem ipsum.</div>\\n<div class=\"display-xl\">Lorem ipsum.</div>\\n<div class=\"display-2xl\">Lorem ipsum.</div>\\n<div class=\"display-3xl\">Lorem ipsum.</div>\\n<div class=\"display-4xl\">Lorem ipsum.</div>'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "weights",
                    "defaultValue": "'<div class=\"text-lg w300\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div>\\n<div class=\"text-lg w400\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div>\\n<div class=\"text-lg w500\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div>\\n<div class=\"text-lg w600\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div>\\n<div class=\"text-lg w700\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div>'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonContent"
                },
                {
                    "name": "IonRow"
                },
                {
                    "name": "IonCol"
                },
                {
                    "name": "Highlight"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { IonContent, IonRow, IonCol } from '@ionic/angular/standalone';\n\n// ##### OTHER IMPORTS\nimport { Highlight } from 'ngx-highlightjs';\n\n@Component({\n  selector: 'app-typography',\n  templateUrl: './typography.page.html',\n  styleUrls: ['./typography.page.scss'],\n  standalone: true,\n  imports: [IonContent, IonRow, IonCol, Highlight],\n})\nexport class TypographyPage {\n  sizes =\n    '<div class=\"text-2xs\">Lorem ipsum.</div>\\n<div class=\"text-xs\">Lorem ipsum.</div>\\n<div class=\"text-sm\">Lorem ipsum.</div>\\n<div class=\"text-md\">Lorem ipsum.</div>\\n<div class=\"text-lg\">Lorem ipsum.</div>\\n<div class=\"text-xl\">Lorem ipsum.</div>\\n<div class=\"display-xs\">Lorem ipsum.</div>\\n<div class=\"display-sm\">Lorem ipsum.</div>\\n<div class=\"display-md\">Lorem ipsum.</div>\\n<div class=\"display-lg\">Lorem ipsum.</div>\\n<div class=\"display-xl\">Lorem ipsum.</div>\\n<div class=\"display-2xl\">Lorem ipsum.</div>\\n<div class=\"display-3xl\">Lorem ipsum.</div>\\n<div class=\"display-4xl\">Lorem ipsum.</div>';\n  weights =\n    '<div class=\"text-lg w300\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div>\\n<div class=\"text-lg w400\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div>\\n<div class=\"text-lg w500\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div>\\n<div class=\"text-lg w600\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div>\\n<div class=\"text-lg w700\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div>';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./typography.page.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<ion-content [fullscreen]=\"true\">\n  <div class=\"gb-pa-4xl\">\n    <div class=\"gb-pa-4xl\">\n      <div class=\"display-lg w700 gb-mb-4xl\">GB Typography</div>\n    </div>\n    <!-- Sizes -->\n    <div class=\"display-sm w600\">Sizes</div>\n    <div class=\"text-md\">Tamaños de los textos</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col style=\"text-align: left\">\n              <div class=\"text-2xs\">Lorem ipsum.</div>\n              <div class=\"text-xs\">Lorem ipsum.</div>\n              <div class=\"text-sm\">Lorem ipsum.</div>\n              <div class=\"text-md\">Lorem ipsum.</div>\n              <div class=\"text-lg\">Lorem ipsum.</div>\n              <div class=\"text-xl\">Lorem ipsum.</div>\n              <div class=\"display-xs\">Lorem ipsum.</div>\n              <div class=\"display-sm\">Lorem ipsum.</div>\n              <div class=\"display-md\">Lorem ipsum.</div>\n              <div class=\"display-lg\">Lorem ipsum.</div>\n              <div class=\"display-xl\">Lorem ipsum.</div>\n              <div class=\"display-2xl\">Lorem ipsum.</div>\n              <div class=\"display-3xl\">Lorem ipsum.</div>\n              <div class=\"display-4xl\">Lorem ipsum.</div>\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"sizes\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n    <!-- Weights -->\n    <div class=\"display-sm w600\">Weights</div>\n    <div class=\"text-md\">Pesos de los textos</div>\n    <div class=\"gb-py-2xl gb-px-md\">\n      <div\n        class=\"overflow-hidden duration-300 bg-white rounded-lg dark:bg-dark-2 shadow-1 hover:shadow-3\">\n        <div class=\"text-center sm:p-9 md:p-7 xl:p-9\">\n          <ion-row>\n            <ion-col style=\"text-align: left\">\n              <div class=\"text-lg w300\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n              </div>\n              <div class=\"text-lg w400\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n              </div>\n              <div class=\"text-lg w500\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n              </div>\n              <div class=\"text-lg w600\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n              </div>\n              <div class=\"text-lg w700\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n              </div>\n            </ion-col>\n            <ion-col>\n              <pre><code [highlight]=\"weights\" language=\"html\"></code></pre>\n            </ion-col>\n          </ion-row>\n        </div>\n      </div>\n    </div>\n    <!--/-->\n  </div>\n</ion-content>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 6,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/full-name/full-name.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FullNameComponent",
                "coveragePercent": 22,
                "coverageCount": "2/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/global/gb-btn/gb-btn.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GbBtnComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/components/global/gb-checkbox/gb-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GbCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/components/global/gb-input/gb-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GbInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/components/global/gb-toggle/gb-toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GbToggleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/components/modal-sample-2/modal-sample-2.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalSample2Component",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/modal-sample/modal-sample.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalSampleComponent",
                "coveragePercent": 33,
                "coverageCount": "2/6",
                "status": "medium"
            },
            {
                "filePath": "src/app/layouts/app-layout/app-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/base-layout/base-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/stores/app-store.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppStore",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/stores/utils.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "Utils",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "src/app/types/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/details/details.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "DetailsPage",
                "coveragePercent": 22,
                "coverageCount": "2/9",
                "status": "low"
            },
            {
                "filePath": "src/app/views/form/form.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormPage",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "src/app/views/global-bank-components/button/button.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonPage",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/views/global-bank-components/checkbox/checkbox.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxPage",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/views/global-bank-components/colors/colors.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorsPage",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/global-bank-components/input/input.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputPage",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/views/global-bank-components/main/main.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "MainPage",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/global-bank-components/spacing/spacing.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "SpacingPage",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/views/global-bank-components/toggle/toggle.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "TogglePage",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/views/global-bank-components/typography/typography.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypographyPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/home/home.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomePage",
                "coveragePercent": 33,
                "coverageCount": "3/9",
                "status": "medium"
            },
            {
                "filePath": "src/app/views/login/login.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginPage",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}